<!doctype html>
<html lang='es'>
  <head>
    <meta charset='UTF-8'>
    <meta name='viewport' content='width=device-width, initial-scale=1.0'>
    <title>
      {% if page_title %}{{ page_title }} - {% endif %}
      {{ store.name }}
    </title>
    <meta name='description' content='{{ page_description | default: store.description }}'>

    <!-- Tailwind CSS -->
    <script src='https://cdn.tailwindcss.com' defer></script>

    <!-- Custom CSS -->
    <style>
      /* Variables CSS personalizadas */
      :root {
        --primary-color: {{ store.primaryColor | default: '#3B82F6' }};
        --secondary-color: {{ store.secondaryColor | default: '#1F2937' }};
      }

      .btn-primary {
        background-color: var(--primary-color);
        color: white;
        padding: 0.75rem 1.5rem;
        border-radius: 0.5rem;
        font-weight: 600;
        transition: all 0.3s ease;
      }

      .btn-primary:hover {
        opacity: 0.9;
        transform: translateY(-2px);
      }
    </style>

    {{ content_for_header }}
  </head>
  <body class='min-h-screen bg-gray-50'>
    <!-- Contenido principal -->
    <main id='main-content'>
      {{ content_for_layout }}
    </main>

    <!-- Scripts -->
    <script>
      // Funcionalidad del carrito
      window.cart = {
        items: [],
        total: 0,

        add: function (product) {
          this.items.push(product)
          this.updateTotal()
          this.updateUI()
        },

        remove: function (productId) {
          this.items = this.items.filter(item => item.id !== productId)
          this.updateTotal()
          this.updateUI()
        },

        updateTotal: function () {
          this.total = this.items.reduce((sum, item) => sum + item.price * item.quantity, 0)
        },

        updateUI: function () {
          const cartCount = document.getElementById('cart-count')
          if (cartCount) {
            cartCount.textContent = this.items.length
          }

          const cartTotal = document.getElementById('cart-total')
          if (cartTotal) {
            cartTotal.textContent = `$${this.total.toFixed(2)}`
          }
        },
      }

      // Funcionalidad de búsqueda
      window.search = {
        init: function () {
          const searchInput = document.getElementById('search-input')
          const searchResults = document.getElementById('search-results')

          if (searchInput) {
            searchInput.addEventListener('input', this.handleSearch.bind(this))
          }
        },

        handleSearch: function (e) {
          const query = e.target.value.toLowerCase()
          if (query.length < 2) return

          // Simular búsqueda (en producción sería una llamada a la API)
          const results = window.products
            ? window.products.filter(
                product =>
                  product.title.toLowerCase().includes(query) ||
                  product.description.toLowerCase().includes(query)
              )
            : []

          this.displayResults(results)
        },

        displayResults: function (results) {
          const searchResults = document.getElementById('search-results')
          if (!searchResults) return

          if (results.length === 0) {
            searchResults.innerHTML = '<p class="p-4 text-gray-500">No se encontraron productos</p>'
            return
          }

          const resultsHtml = results
            .map(
              product => `
          <div class="p-4 border-b hover:bg-gray-50 cursor-pointer">
            <h3 class="font-semibold">${product.title}</h3>
            <p class="text-sm text-gray-600">${product.price}</p>
          </div>
        `
            )
            .join('')

          searchResults.innerHTML = resultsHtml
        },
      }

      // Inicializar funcionalidades
      document.addEventListener('DOMContentLoaded', function () {
        window.search.init()
      })
    </script>
  </body>
</html>
